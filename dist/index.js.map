{"version":3,"sources":["webpack://pbcrypto/webpack/universalModuleDefinition","webpack://pbcrypto/webpack/bootstrap","webpack://pbcrypto/./src/crypto.js","webpack://pbcrypto/./src/encrypted-storage.js","webpack://pbcrypto/./src/index.js","webpack://pbcrypto/./src/encoder.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getPbCrypto","password","salt","currentCrypto","arguments","length","undefined","window","crypto","targets","hash","deriveKey","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","keyMaterial","_args","wrap","_context","prev","next","subtle","importKey","str2ab","sent","abrupt","iterations","stop","_x","_x2","apply","encrypt","message","iv","then","cryptoKey","encodedText","encryptMessage","enc","ab2str","decrypt","ciphertext","decryptMessage","dec","getIv","getRandomValues","Uint8Array","isBrowserSupported","_ref2","_callee2","testMessage","cryptoWrapper","encrypted","decrypted","_context2","t0","console","warn","getEncryptedStorageFromCrypto","storage","isSupported","getIvKey","concat","unmodifiedFunctions","clear","setBrowserSupport","_objectSpread","setItem","_setItem","String","ab2str8","error","getItem","_getItem","_callee3","data","_context3","str2ab8","_x3","removeItem","ivKey","__webpack_exports__","getEncryptedStorage","_len","args","Array","_key","arg1","arg2","_typeof","getEncryptedStorageFromPassword","buffer","bufView","Uint16Array","result","addition","Math","pow","fromCharCode","subarray","str","ab","charCodeAt","buf","_String$fromCharCode","_toConsumableArray","from","map","ch"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pbcrypto\"] = factory();\n\telse\n\t\troot[\"pbcrypto\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 50);\n","import { str2ab, ab2str } from './encoder';\r\n\r\n/**\r\n * Creates an instance of PbCrypto with encrypt and decrypt operations\r\n * @param {String} password\r\n * @param {String} salt\r\n * @param {Crypto} currentCrypto - window.crypto instance\r\n */\r\nexport const getPbCrypto = (password, salt, currentCrypto = window.crypto) => {\r\n  const name = 'AES-GCM';\r\n  const targets = [\"encrypt\", \"decrypt\"];\r\n  const pbkdfName = 'PBKDF2';\r\n  const hash = { name: 'SHA-256', length: 256 };\r\n  const iterations = 1000;\r\n\r\n  const deriveKey = async (password, salt, currentCrypto = window.crypto) => {\r\n    const keyMaterial = await currentCrypto.subtle.importKey(\r\n      \"raw\",\r\n      str2ab(password),\r\n      { name: pbkdfName },\r\n      false,\r\n      [\"deriveBits\", \"deriveKey\"]\r\n    );\r\n    return currentCrypto.subtle.deriveKey(\r\n      {\r\n        name: pbkdfName,\r\n        salt: str2ab(salt),\r\n        iterations,\r\n        hash: hash.name,\r\n      },\r\n      keyMaterial,\r\n      { name, length: hash.length },\r\n      true,\r\n      targets,\r\n    );\r\n  };\r\n\r\n  const encryptMessage = (key, iv, encodedText) => currentCrypto.subtle.encrypt(\r\n    { name, iv },\r\n    key,\r\n    encodedText\r\n  );\r\n\r\n  const decryptMessage = (key, iv, ciphertext) => currentCrypto.subtle.decrypt(\r\n    { name, iv },\r\n    key,\r\n    ciphertext\r\n  );\r\n\r\n  const encrypt = (message, iv) => deriveKey(password, salt)\r\n    .then(cryptoKey => encryptMessage(cryptoKey, iv, str2ab(message)))\r\n    .then(enc => ab2str(enc));\r\n\r\n  const decrypt = (ciphertext, iv) => deriveKey(password, salt)\r\n    .then(cryptoKey => decryptMessage(cryptoKey, iv, str2ab(ciphertext)))\r\n    .then(dec => ab2str(dec));\r\n\r\n  const getIv = () => currentCrypto.getRandomValues(new Uint8Array(16));\r\n\r\n  return { encrypt, decrypt, getIv };\r\n};\r\n\r\n/**\r\n * Determines whether current browser supports WebCrypto API using feature detection\r\n */\r\nexport const isBrowserSupported = async () => {\r\n  const testMessage = 'w?';\r\n  try {\r\n    const cryptoWrapper = getPbCrypto('a', 'b');\r\n    const iv = cryptoWrapper.getIv();\r\n    const encrypted = await cryptoWrapper.encrypt(testMessage, iv);\r\n    const decrypted = await cryptoWrapper.decrypt(encrypted, iv);\r\n    return decrypted === testMessage;\r\n  } catch (error) {\r\n    console.warn('Your browser does not support WebCrypto API', error);\r\n    return false;\r\n  }\r\n};","import { ab2str8, str2ab8 } from './encoder';\r\nimport { getPbCrypto, isBrowserSupported } from './crypto';\r\n\r\n/**\r\n * Gets encrypted storage with async getItem and setItem\r\n * \r\n * @param {Storage} storage Browser storage - localStorage, sessionStorage\r\n * @param {ICrypto} cryptoWrapper Crypto\r\n */\r\nexport const getEncryptedStorageFromCrypto = (storage, cryptoWrapper) => {\r\n\r\n  let isSupported;\r\n\r\n  const getIvKey = key => `${key}_iv`;\r\n\r\n  const unmodifiedFunctions = {\r\n    clear() {\r\n      storage.clear();\r\n    },\r\n    get length() {\r\n      return storage.length;\r\n    },\r\n    key(i) {      \r\n      return storage.key(i);\r\n    },\r\n  };\r\n\r\n  const setBrowserSupport = async () => {\r\n    if (typeof isSupported === 'undefined') {\r\n      isSupported = await isBrowserSupported();\r\n    }\r\n  };\r\n\r\n  return {\r\n    async setItem(key, value) {\r\n      await setBrowserSupport();\r\n      if (isSupported) {\r\n        try {\r\n          const iv = cryptoWrapper.getIv(); // getting iv per item\r\n          const encrypted = await cryptoWrapper.encrypt(value, iv);\r\n          storage.setItem(key, String(encrypted));\r\n          storage.setItem(getIvKey(key), ab2str8(iv));\r\n        }\r\n        catch (error) {\r\n          console.error(`Cannot set encrypted value for ${key}. Error: ${error}`);\r\n          throw error;\r\n        }\r\n      } else {\r\n        storage.setItem(key, value); // legacy mode, no encryption\r\n      }\r\n    },\r\n    async getItem(key) {\r\n      await setBrowserSupport();\r\n      if (isSupported) {\r\n        try {\r\n          const data = storage.getItem(key);\r\n          const iv = storage.getItem(getIvKey(key));\r\n          const decrypted = await cryptoWrapper.decrypt(data, str2ab8(iv));\r\n          return decrypted;\r\n        }\r\n        catch (error) {\r\n          console.error(`Cannot get encrypted item for ${key}. Error: ${error}`);\r\n          return null;\r\n        }\r\n      }\r\n      return storage.getItem(key); // legacy mode, no encryption\r\n    },\r\n    removeItem(key) {\r\n      storage.removeItem(key);\r\n\r\n      const ivKey = getIvKey(key);\r\n      storage.getItem(ivKey) && storage.removeItem(ivKey);\r\n    },\r\n    ...unmodifiedFunctions,\r\n  };\r\n};\r\n\r\nconst getEncryptedStorageFromPassword = (storage, password, salt) => getEncryptedStorageFromCrypto(storage, getPbCrypto(password, salt));\r\n\r\nexport const getEncryptedStorage = (storage, ...args) => {\r\n  const [arg1, arg2] = args;\r\n  if (typeof arg1 === 'object') { // it is crypto object\r\n    return getEncryptedStorageFromCrypto(storage, arg1);\r\n  }\r\n  if (typeof arg1 === 'string' && typeof arg2 === 'string') {\r\n    return getEncryptedStorageFromPassword(storage, arg1, arg2);\r\n  }\r\n};","import { getPbCrypto } from './crypto'; \r\nimport { getEncryptedStorage } from './encrypted-storage';\r\n\r\nexport default {\r\n  getPbCrypto,\r\n  getEncryptedStorage,\r\n};","export const ab2str = (buffer) => {\r\n  const bufView = new Uint16Array(buffer);\r\n  const length = bufView.length;\r\n  let result = '';\r\n  let addition = Math.pow(2, 16) - 1;\r\n\r\n  for(let i = 0; i < length;i += addition) {\r\n    if (i + addition > length) {\r\n        addition = length - i;\r\n    }\r\n    result += String.fromCharCode.apply(null, bufView.subarray(i, i + addition));\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const str2ab = (str) => {\r\n  const ab = new Uint16Array(str.length);\r\n  for (let i = 0; i < str.length; i++) {\r\n      ab[i] = str.charCodeAt(i);\r\n  }\r\n  return ab.buffer;\r\n};\r\n\r\nexport const ab2str8 = buf => String.fromCharCode.call(null, ...new Uint8Array(buf));\r\n\r\nexport const str2ab8 = str => Uint8Array.from([...str].map(ch => ch.charCodeAt())).buffer;"],"sourceRoot":""}